import { Tab } from "@headlessui/react";
import { format } from "date-fns";
import dynamic from "next/dynamic";
import Head from "next/head";
import { useState } from "react";
import DriversTab from "~/components/tools/routing/drivers/drivers_tab";
import CalculationsTab from "~/components/tools/routing/solutions/calculations_tab";

import StopsTab from "~/components/tools/routing/stops/stops_tab";

import ToolLayout from "~/layouts/tool-layout";
import { api } from "~/utils/api";

import { classNames, cn } from "~/utils/styles";

import { CalendarIcon, Car } from "lucide-react";
import { Button } from "~/components/ui/button";
import { Calendar } from "~/components/ui/calendar";
import {
  Card,
  CardContent,
  CardDescription,
  CardFooter,
  CardHeader,
  CardTitle,
} from "~/components/ui/card";

import AddInfoSheet from "~/components/tools/routing/ui/add-info-sheet";
import {
  Popover,
  PopoverContent,
  PopoverTrigger,
} from "~/components/ui/popover";
import { Tabs, TabsContent, TabsList, TabsTrigger } from "~/components/ui/tabs";
import RouteLayout from "~/layouts/route-layout";

const LazyRoutingMap = dynamic(
  () => import("~/components/tools/routing/map/RoutingMap"),
  {
    ssr: false,
    loading: () => <div>loading...</div>,
  }
);

/**
 * Page component that allows users to generate routes based on their input.
 */
const RoutingPage = () => {
  const [selectedDate, setSelectedDate] = useState<Date>(new Date());
  const { data: depot } = api.depot.getCurrentUserDepot.useQuery();

  console.log(depot);

  return (
    <>
      <Head>
        <title>Routing Optimization | Artisanal Futures</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />{" "}
      </Head>
      <RouteLayout>
        {/* <section className="flex w-full flex-grow flex-col  justify-between bg-blue-500 lg:w-5/12 xl:w-4/12 2xl:w-3/12"> */}
        <Tabs defaultValue="overview" className="flex w-full flex-col">
          <div className="">
            <div className="flex items-center justify-between space-y-2">
              <h2 className="text-3xl font-bold tracking-tight">
                {" "}
                {depot?.name ? `${depot?.name}'s Depot` : "Depot View"}
              </h2>
              <div className="flex items-center space-x-2">
                <div className="flex flex-col">
                  <Popover>
                    <PopoverTrigger asChild>
                      <Button
                        variant={"outline"}
                        className={cn(
                          "w-[240px] pl-3 text-left font-normal",
                          !selectedDate && "text-muted-foreground"
                        )}
                      >
                        {selectedDate ? (
                          format(selectedDate, "PPP")
                        ) : (
                          <span>Pick a date</span>
                        )}
                        <CalendarIcon className="ml-auto h-4 w-4 opacity-50" />
                      </Button>
                    </PopoverTrigger>
                    <PopoverContent className="w-auto p-0" align="start">
                      <Calendar
                        mode="single"
                        selected={selectedDate}
                        onSelect={(e) => {
                          setSelectedDate(e!);
                        }}
                        initialFocus
                      />
                    </PopoverContent>
                  </Popover>
                </div>

                <Button>View Routes</Button>
              </div>
            </div>

            <TabsList className=" ">
              <TabsTrigger value="overview">Overview</TabsTrigger>
              <TabsTrigger value="stops">Stops</TabsTrigger>
              <TabsTrigger value="drivers">Drivers</TabsTrigger>
              <TabsTrigger value="calculations">Calculate</TabsTrigger>
            </TabsList>
          </div>

          <div className="relative flex h-full flex-col overflow-y-hidden ">
            <TabsContent value="overview" className=" h-full rounded-xl  p-3">
              <div className="flex h-full flex-col-reverse gap-4 md:flex-row">
                <div className="flex  grow basis-2/6 flex-col  lg:basis-1/6">
                  {/* <StopsTab /> */}
                </div>
                <div className="relative z-0 flex aspect-square  grow basis-4/6 flex-col lg:aspect-auto lg:basis-7/12 xl:basis-9/12 2xl:basis-9/12">
                  <div className="flex h-full flex-col justify-center space-y-32">
                    <div className="flex flex-col gap-2">
                      <h1 className="scroll-m-20 text-4xl font-extrabold tracking-tight lg:text-5xl">
                        Welcome!
                      </h1>
                    </div>
                    <div className="flex  flex-row gap-4">
                      <AddInfoSheet type={"driver"}>
                        <p>test</p>
                      </AddInfoSheet>
                      <Card
                        className="flex-1 cursor-pointer bg-transparent hover:bg-accent"
                        onClick={console.log}
                      >
                        <CardHeader>
                          <CardTitle className="flex items-center justify-between">
                            Add Drivers <Car />
                          </CardTitle>
                        </CardHeader>
                        <CardContent className="text-sm text-muted-foreground">
                          Look&apos;s like you have no drivers to choose from.
                          Click here to add your drivers.
                        </CardContent>
                      </Card>
                      <Card
                        className="flex-1 cursor-pointer bg-transparent hover:bg-accent"
                        onClick={console.log}
                      >
                        <CardHeader>
                          <CardTitle className="flex items-center justify-between">
                            Add Drivers <Car />
                          </CardTitle>
                        </CardHeader>
                        <CardContent className="text-sm text-muted-foreground">
                          Look&apos;s like you have no drivers to choose from.
                          Click here to add your drivers.
                        </CardContent>
                      </Card>
                    </div>{" "}
                    <div className="flex flex-col gap-2">
                      <h1 className="scroll-m-20 text-4xl font-extrabold tracking-tight lg:text-5xl">
                        Welcome!
                      </h1>
                    </div>
                  </div>
                </div>
              </div>
            </TabsContent>
            <TabsContent value="stops" className=" h-full rounded-xl  p-3">
              <div className="flex h-full flex-col-reverse gap-4 md:flex-row">
                <div className="flex  grow basis-2/6  flex-col lg:basis-1/6">
                  <StopsTab />
                </div>
                <div className="relative z-0 flex aspect-square  grow basis-4/6 flex-col lg:aspect-auto lg:basis-7/12 xl:basis-9/12 2xl:basis-9/12">
                  <LazyRoutingMap />
                </div>
              </div>
            </TabsContent>
            <TabsContent value="drivers" className=" h-full rounded-xl  p-3">
              <div className="flex h-full flex-col-reverse gap-4 md:flex-row">
                <div className="flex  grow basis-2/6 flex-col  lg:basis-1/6">
                  <DriversTab />
                </div>
                <div className="relative z-0 flex aspect-square  grow basis-4/6 flex-col lg:aspect-auto lg:basis-7/12 xl:basis-9/12 2xl:basis-9/12">
                  <LazyRoutingMap />
                </div>
              </div>
            </TabsContent>
            <TabsContent
              value="calculations"
              className=" h-full rounded-xl  p-3"
            >
              <div className="flex h-full flex-col-reverse gap-4 md:flex-row">
                <div className="flex  grow basis-2/6 flex-col  lg:basis-1/6">
                  <CalculationsTab />
                </div>
                <div className="relative z-0 flex aspect-square  grow basis-4/6 flex-col lg:aspect-auto lg:basis-7/12 xl:basis-9/12 2xl:basis-9/12">
                  <LazyRoutingMap />
                </div>
              </div>
            </TabsContent>
          </div>
        </Tabs>
        {/* </section> */}
      </RouteLayout>
    </>
  );
};

export default RoutingPage;
