import type { GetServerSidePropsContext } from "next";
import Head from "next/head";

import type { User } from "next-auth";

import { useParams } from "next/navigation";
import { ShopForm } from "~/apps/account/components/shop-form";
import ProfileLayout from "~/apps/account/profile-layout";
import PageLoader from "~/components/ui/page-loader";
import { prisma } from "~/server/db";
import { api } from "~/utils/api";
import { authenticateUserServerSide } from "~/utils/authentication/server";

const DashboardPage = () => {
  const { shopId } = useParams();

  const { data: shop, isLoading } = api.shops.getShopById.useQuery({
    id: shopId as string,
  });

  if (isLoading)
    <ProfileLayout>
      <PageLoader />
    </ProfileLayout>;

  return (
    <>
      <Head>
        <title>Shop Dashboard | Artisanal Futures</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <ProfileLayout>
        <div className="space-y-6">
          {typeof shop !== "undefined" && <ShopForm initialData={shop} />}
        </div>
      </ProfileLayout>
    </>
  );
};

const handleSingleStoreServerSide = async (
  user: User,
  ctx?: GetServerSidePropsContext
) => {
  const userId = user.id;

  const shop = await prisma.shop.findFirst({
    where: {
      id: ctx?.query.shopId as string,
      ownerId: userId,
    },
  });

  if (!shop) {
    return {
      redirect: {
        destination: `/profile`,
        permanent: false,
      },
    };
  }

  return { props: {} };
};

export const getServerSideProps = async (ctx: GetServerSidePropsContext) =>
  authenticateUserServerSide(ctx, handleSingleStoreServerSide);

export default DashboardPage;
