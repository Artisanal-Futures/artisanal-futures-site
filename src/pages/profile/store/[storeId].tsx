import { CreditCard, DollarSign, Package } from "lucide-react";
import type { GetServerSidePropsContext } from "next";
import Head from "next/head";
import type { FC } from "react";

import { authenticateSession } from "~/utils/auth";

import type { Store } from "@prisma/client";

import { Card, CardContent, CardHeader, CardTitle } from "~/components/ui/card";
import { Heading } from "~/components/ui/heading";
import { Separator } from "~/components/ui/separator";

import { clerkClient, currentUser, getAuth } from "@clerk/nextjs/server";
import { StoreForm } from "~/components/profile/store-form";
import PageLoader from "~/components/ui/page-loader";
import ProfileLayout from "~/layouts/profile-layout";

interface DashboardPageProps {
  store: Store;
}

const DashboardPage: FC<DashboardPageProps> = ({ store }) => {
  return (
    <>
      <Head>
        <title>Store Dashboard</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <ProfileLayout>
        <div className="space-y-6">
          {typeof store === "undefined" && <PageLoader />}
          {typeof store === "object" && (
            <StoreForm initialData={store ?? null} />
          )}
        </div>
      </ProfileLayout>
    </>
  );
};

export async function getServerSideProps(ctx: GetServerSidePropsContext) {
  const store = (await authenticateSession(ctx)) as Store;

  if (!store) {
    return {
      redirect: {
        destination: `/profile`,
        permanent: false,
      },
    };
  }

  return {
    props: {
      store: {
        ...store,
        createdAt: store.createdAt.toISOString(),
        updatedAt: store.updatedAt.toISOString(),
      },
    },
  };
}

export default DashboardPage;
